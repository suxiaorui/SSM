<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rui.mybatis.mapper.EmpMapper">
    <!-- Emp getEmpByEmpId(@Param("empId") Integer empId);-->
    <!--
        resultMap:设置自定义的映射关系
        id：唯一标识
        type：处理映射关系的实体类的类型
        常用的标签
        id:处理主键和实体类中属性的映射关系
        result: 处理普通字段和实体类中属性的映射关系
        association 处理多对一的映射关系（处理实体类类型的属性）
        collection 处理一对多的映射关系 （处理集合类型的属性）
        column:设置映射关系中的字段名，必须是sql查询出的某个字段
        property：设置映射关系中的属性名，必须是处理的实体类类型中的属性名
       -->
    <resultMap id="empResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
    </resultMap>

    <select id="getEmpByEmpId" resultMap="empResultMap">
        select * from t_emp where emp_id = #{empId}
    </select>
    <select id="getEmpByEmpIdold" resultType="Emp">
        select * from t_emp where emp_id = #{empId}
    </select>

    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <result column="dept_id" property="dept.deptId"></result>
        <result column="dept_name" property="dept.deptName"></result>
    </resultMap>

    <resultMap id="empAndDeptResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"></id>
            <result column="dept_name" property="deptName"></result>
        </association>
    </resultMap>


    <!-- Emp getEmpAndDeptByEmpId(@Param("empId") Integer empId);   -->
    <select id="getEmpAndDeptByEmpId" resultMap="empAndDeptResultMap">
        select
        t_emp.*, t_dept.*
        from t_emp
        left join t_dept
        on t_emp.dept_id = t_dept.dept_id
        where t_emp.emp_id = #{empId}
    </select>

    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <!--
            property：设置需要处理的映射关系的属性的属性名；
            select：设置分布查询的sql的唯一标识；
            column：将查询出的某个字段作为分布查询的sql的条件；
            可以实现延迟加载，但需要配置文件（核心配置文件的setting标签的name属性，value属性设置为true标识开启）：
            lazyLoadingEnabled：延迟加载的全局开关，开启时，所有关联对象都会延迟加载；
            aggressiveLazyLoading：开启时，任何方法的调用都会加载该对象的所有属性，否则每个属性按需要加载；
            这样就可以实现按需加载，获取的数据是什么，就只会执行对应的sql，
            可以通过association和collection中的fetchType属性设置当前分布查询是否使用延迟加载，
            fetchType = "lazy"（延迟加载）、"eager"(立即加载)；
            -->
        <association property="dept"
                     select="com.rui.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="dept_id">
        </association>
    </resultMap>


    <!--    Emp getEmpAndDeptByStepOne(@Param("empId") Integer empId);-->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepResultMap">
        select * from t_emp where emp_id = #{empId}
    </select>
    
    <!-- List<Emp> getDeptAndEmpByStepTwo(@Param("deptId") Integer deptId);   -->
    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        select * from t_emp where dept_id = #{deptId};
    </select>
</mapper>